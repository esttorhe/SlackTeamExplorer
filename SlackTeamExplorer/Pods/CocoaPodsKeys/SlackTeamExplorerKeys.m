//
// Generated by CocoaPods-Keys
// on 29/06/2015
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "SlackTeamExplorerKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation SlackTeamExplorerKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(SlackTeamExplorerKeys *, SEL) = NULL;

  if ([key isEqualToString:@"slackToken"]) {
    implementation = _podKeys327a271f58adf21bfa7201c3129db022;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeys327a271f58adf21bfa7201c3129db022(SlackTeamExplorerKeys *self, SEL _cmd)
{
  
    
      char cString[45] = { SlackTeamExplorerKeysData[1114], SlackTeamExplorerKeysData[816], SlackTeamExplorerKeysData[769], SlackTeamExplorerKeysData[1171], SlackTeamExplorerKeysData[1391], SlackTeamExplorerKeysData[264], SlackTeamExplorerKeysData[1157], SlackTeamExplorerKeysData[743], SlackTeamExplorerKeysData[1247], SlackTeamExplorerKeysData[867], SlackTeamExplorerKeysData[1323], SlackTeamExplorerKeysData[1160], SlackTeamExplorerKeysData[37], SlackTeamExplorerKeysData[1262], SlackTeamExplorerKeysData[1409], SlackTeamExplorerKeysData[953], SlackTeamExplorerKeysData[1344], SlackTeamExplorerKeysData[261], SlackTeamExplorerKeysData[330], SlackTeamExplorerKeysData[1237], SlackTeamExplorerKeysData[1179], SlackTeamExplorerKeysData[778], SlackTeamExplorerKeysData[851], SlackTeamExplorerKeysData[168], SlackTeamExplorerKeysData[1394], SlackTeamExplorerKeysData[1032], SlackTeamExplorerKeysData[722], SlackTeamExplorerKeysData[111], SlackTeamExplorerKeysData[177], SlackTeamExplorerKeysData[961], SlackTeamExplorerKeysData[1000], SlackTeamExplorerKeysData[480], SlackTeamExplorerKeysData[908], SlackTeamExplorerKeysData[613], SlackTeamExplorerKeysData[548], SlackTeamExplorerKeysData[129], SlackTeamExplorerKeysData[605], SlackTeamExplorerKeysData[1310], SlackTeamExplorerKeysData[1378], SlackTeamExplorerKeysData[1289], SlackTeamExplorerKeysData[402], SlackTeamExplorerKeysData[725], SlackTeamExplorerKeysData[433], SlackTeamExplorerKeysData[995], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char SlackTeamExplorerKeysData[1410] = "EEv/JOGpnKDpLRefbnBR4WMkA6p3tcx91lDq97/6cbzdmt1RWgYl9sJ1MN7nxTb8XiCDrIaKGoEN29oHWfZLaQri8yIa4TmqKv+M4/yVDlpCinP4tLiSFrkmXE5kBxF/R0uN1TpIu1CnXcK/91mC6oFz10WAYNvIsYVUSF6u7ADFtvoJ38Fsc5FcSs599RGrT1l/KT0v0NFbv7Rf5qAd155SKC+kK/M2I/yIzrvMHemXeZUMWwIespVZGdd/8Z7AZQpPo6Q84shPYxU5BEQpbwWA3Jmwn1f6RGANDlfZ6qLBs0Dyy121VPE7wAGRhE7SJYwngr75jO9ynmW1dh7UH9IRSR9jUB/aTegIngq0USYyOSDgacx0f8nxKFWDpHMbb/0gRveItAmD+XHUvV1shS/0/4gISmRHzFVD5afGOxK0exlMofZAgxTj4X05sfVIX9C77n9uvmkRH8ZQkhhlv4Qy9+tkaGbp0dl4fg6fJlBvsNKmNyoxWJSW0vLsz1wPU/mrdZqmo2Eak6M6stX0Qcm27wjdwW/jnCOV99IGy/cBjOZm0yxkTjiQee9deuDkOc1m21TAi0nU7MBCWbcZRS/BuTtXi5gFZ4RwU32HLQiwS40JueYnt8woKTVXX6BapXZolcXbcftYhihGuzYq79eQJp6uqfge/yqDPtxkH97fDCx8kyB9EfDcvF6A/i342ZbiBHrXSuf2JYvyih-NqaakrLmdHL28XUjcJvH9N3woHAC0a5U8HY82mSpUqu267xbMx9MTQZ6k9R+uzfCPbZIBxyec+XsWZTcAWmMIl7UaLVKMo5gsqbROdR3EbCksoT8SoRBDSWZ6eLNTbFo9C3QPTBjC8mehKR575nV61ioKdF8q01SL5g0dd/SkXwxteUMIarbVktJ62r4NKJ9n72YzYttrSLC0h0XPqfcjU+TQcDvU8CI8shtEk-IFhrfzv9nQ18ho3kth501k6JxPjvjIRZlzGDfjHMaaBdGa8UhZjsta0pakCXWqE1+eMIfsqhw8a3vZ8q8c0VE7Cx0gZx6/TsJWZGtHWr+aTuTP9XhqNW/BDf0Gif/JeDX3DnDj4evo1ByIUxIgnQD3ambbK7y27rxXLkq5sxLkNpma7R1tvNmDK9Nf7HSPloon/MMLRVQep6+Y9Wt3XsqjQUgpLpwNo2E7ct/cRPOGxGsPCl/D7tuCBnUWrlJNJ8zz0mSqPW/3RyzqlHs2hbA7PUCbN8zbpGSVPQh8c2ReSL5cwV+ed567phtNQ5HK4I+2P+FgywEysQKeVaaH3H5F4dLhAh1LA894k+-dW7bCnwrJli66Pzb4IC+/EfVj7Qn/xREg4Sud/snLkmUJC+62/QsVf2AJ4bNMU12v2+7LibepwF6hGGz-bn6Y1g0m3tQLpj1J\\6";

- (NSString *)description
{
  return [@{
            @"slackToken": self.slackToken,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
